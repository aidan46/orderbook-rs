searchState.loadedDescShard("orderbook", 0, "orderbook\nOrdered in ascending order\nOrdered in descending order\nAsk or Bid\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFunction gets the best price for the given <code>Side</code>\nFunction drains orders on the given <code>Price</code> and <code>Side</code> …\nFunction gets the total quantity at the given <code>Price</code> and …\nOrderId, not generated by the order book to allow for …\nFunction insert a new <code>Order</code> into the <code>OrderBook</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor function\nConstructor function\nPrice level of the order\nQuanity\nFunction removes an <code>Order</code> according to an <code>OrderId</code>\nAsk or Bid")